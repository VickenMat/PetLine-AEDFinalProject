
package hospitalAdmin;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import models.City;
import models.Hospital;
import models.Vet;
import models.Person;
import models.Appointments;
import java.util.Date;
import javax.swing.JOptionPane;
import resources.Validations;

/**
 *
 * @author vicken
 */
public class AppointmentCreate extends javax.swing.JFrame {

    City city;
    Hospital hospital;
    Vet vet;
    Person person;
    Validations validations;
    
    public AppointmentCreate() {
        initComponents();
        cityCombo.removeAllItems();
        cityCombo.addItem("");
        
//        for (City c : MainJFrame.cityDirectory.getCityList()){
//            cityCombo.addItem(c.getName());
//        }
        
//        cityCombo.getSelectedItem("");
        validations = new Validations();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        vetLbl = new javax.swing.JLabel();
        hospitalLbl = new javax.swing.JLabel();
        bookBtn = new javax.swing.JButton();
        datePicker = new com.toedter.calendar.JDateChooser();
        dateLbl = new javax.swing.JLabel();
        vetCombo = new javax.swing.JComboBox<>();
        hospitalCombo = new javax.swing.JComboBox<>();
        cityCombo = new javax.swing.JComboBox<>();
        cityLbl = new javax.swing.JLabel();
        userLbl = new javax.swing.JLabel();
        userCombo = new javax.swing.JComboBox<>();
        closeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 102));

        jButton3.setText("Logout");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jButton3)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(24, 24, 24))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 360));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Book Appointment");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(274, 16, -1, -1));

        vetLbl.setForeground(new java.awt.Color(0, 0, 102));
        vetLbl.setText("Vet");
        jPanel1.add(vetLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 118, -1, -1));

        hospitalLbl.setForeground(new java.awt.Color(0, 0, 102));
        hospitalLbl.setText("Hospital");
        jPanel1.add(hospitalLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 77, -1, -1));

        bookBtn.setBackground(new java.awt.Color(0, 0, 102));
        bookBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bookBtn.setForeground(new java.awt.Color(204, 204, 204));
        bookBtn.setText("Book");
        bookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookBtnActionPerformed(evt);
            }
        });
        jPanel1.add(bookBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(348, 256, 163, -1));
        jPanel1.add(datePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 165, 96, -1));

        dateLbl.setForeground(new java.awt.Color(0, 0, 102));
        dateLbl.setText("Date");
        jPanel1.add(dateLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 171, -1, -1));

        vetCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vetComboActionPerformed(evt);
            }
        });
        jPanel1.add(vetCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(262, 115, 98, -1));

        hospitalCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalComboActionPerformed(evt);
            }
        });
        jPanel1.add(hospitalCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(513, 74, 100, -1));

        cityCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityComboActionPerformed(evt);
            }
        });
        jPanel1.add(cityCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(513, 115, 100, -1));

        cityLbl.setForeground(new java.awt.Color(0, 0, 102));
        cityLbl.setText("City");
        jPanel1.add(cityLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(459, 121, -1, -1));

        userLbl.setForeground(new java.awt.Color(0, 0, 102));
        userLbl.setText("User");
        jPanel1.add(userLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 77, -1, -1));

        userCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userComboActionPerformed(evt);
            }
        });
        jPanel1.add(userCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 74, 96, -1));

        closeBtn.setBackground(new java.awt.Color(0, 0, 102));
        closeBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        closeBtn.setForeground(new java.awt.Color(204, 204, 204));
        closeBtn.setText("Close");
        closeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBtnActionPerformed(evt);
            }
        });
        jPanel1.add(closeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 6, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cityComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityComboActionPerformed
        Object city_name = cityCombo.getSelectedItem();

        if (city_name == null || city_name.toString().equals("")) {
            cityLbl.setText("Please Select City");
            hospitalCombo.removeAllItems();
            vetCombo.removeAllItems();
            userCombo.removeAllItems();
            hospitalLbl.setText(null);
            userLbl.setText(null);
            vetLbl.setText(null);
            
            } else {
            cityCombo.removeAllItems();
            hospitalCombo.removeAllItems();
            vetCombo.removeAllItems();
            userCombo.removeAllItems();
            hospitalLbl.setText(null);
            cityLbl.setText(null);
            userLbl.setText(null);
            vetLbl.setText(null);
        }
    }//GEN-LAST:event_cityComboActionPerformed

    private void hospitalComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalComboActionPerformed
        Object hospitalName = hospitalCombo.getSelectedItem();

        if (hospitalName == null || hospitalName.toString().equals("")) {
            hospitalLbl.setText("Please Select Hospital");
            vetCombo.removeAllItems();
            userCombo.removeAllItems();
            vetLbl.setText(null);
            userLbl.setText(null);
        } else {
            vetCombo.removeAllItems();
            userCombo.removeAllItems();
            hospitalLbl.setText(null);
            
            vetCombo.addItem("");
//            for (Vet c: hospital.getVetList()) {
//                vetCombo.addItem(c.getName());
//            }
            vetCombo.setSelectedItem("");
            
            vetCombo.addItem("");
//            for (Person c: hospital.getPersonList()) {
//                vetCombo.addItem(c.getName());
//            }
            vetCombo.setSelectedItem("");

        }
    }//GEN-LAST:event_hospitalComboActionPerformed

    private void vetComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vetComboActionPerformed
        Object vetName = vetCombo.getSelectedItem();

        if (vetName == null || vetName.toString().equals("")) {
            vetLbl.setText("Please Select Doctor");
        } else {
            vetLbl.setText(null);
//            vet = hospital.getVetByName(vetName.toString());

        }
    }//GEN-LAST:event_vetComboActionPerformed

    private void userComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userComboActionPerformed
        Object personName = userCombo.getSelectedItem();

//        if (patientName == null || patientName.toString().equals("")) {
//            userLbl.setText("Please Select Doctor");
//        } else {
//            userLbl.setText(null);
//            person = hospital.getPersontByName(personName.toString());
//
//        }
    }//GEN-LAST:event_userComboActionPerformed

    private void bookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookBtnActionPerformed
        var valid = true;

        if (cityCombo.getSelectedItem() == null || cityCombo.getSelectedItem().toString().isEmpty()) {
            cityLbl.setText("Please Select City");
            valid = false;
        }

        if (hospitalCombo.getSelectedItem() == null || hospitalCombo.getSelectedItem().toString().isEmpty()) {
            hospitalLbl.setText("Please Select Hospital");
            valid = false;
        }
        
//        if (!this.validations.ValidateEmpty(datePicker.getDateStringOrEmptyString()) ) {
//            dateLbl.setText("Date of joining is required");
//            valid = false;
//        }

        if (vetCombo.getSelectedItem() == null || vetCombo.getSelectedItem().toString().isEmpty()) {
            vetLbl.setText("Please Select doctor");
            valid = false;
        }
        
        if (userCombo.getSelectedItem() == null || userCombo.getSelectedItem().toString().isEmpty()) {
            userLbl.setText("Please Select patient");
            valid = false;
        }
        if (valid) {

            Date date;
            
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-M-dd");
            
//            try {
//                date = formatter.parse(datePicker.getDateStringOrEmptyString());
//                
//            } catch (ParseException ex) {
//                date = new Date(1970, 01, 01);
//            }
//
//            MainJFrame.encounterDirectory.newEncounter(date, doctor, hospital, patient);
            
            JOptionPane.showMessageDialog(this, "encounter details Added");
            cityCombo.setSelectedItem("");
            hospitalCombo.setSelectedItem("");
            vetCombo.setSelectedItem("");
            userCombo.setSelectedItem("");
            datePicker.setDate(null);
            cityLbl.setText(null);
            dateLbl.setText(null);
            vetLbl.setText(null);
            hospitalLbl.setText(null);
            userLbl.setText(null);
                    
        }
    }//GEN-LAST:event_bookBtnActionPerformed

    private void closeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBtnActionPerformed
        System.out.println("Closing the application");
        System.exit(0);
    }//GEN-LAST:event_closeBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppointmentCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppointmentCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppointmentCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppointmentCreate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppointmentCreate().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookBtn;
    private javax.swing.JComboBox<String> cityCombo;
    private javax.swing.JLabel cityLbl;
    private javax.swing.JButton closeBtn;
    private javax.swing.JLabel dateLbl;
    private com.toedter.calendar.JDateChooser datePicker;
    private javax.swing.JComboBox<String> hospitalCombo;
    private javax.swing.JLabel hospitalLbl;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> userCombo;
    private javax.swing.JLabel userLbl;
    private javax.swing.JComboBox<String> vetCombo;
    private javax.swing.JLabel vetLbl;
    // End of variables declaration//GEN-END:variables
}
